---
import BaseLayout from './BaseLayout.astro';
import BlogPost from '../components/BlogPost.astro';

interface BlogPostFrontmatter {
  title: string;
  description?: string;
  pubDate: string;
  author: string;
  image?: { url: string; alt?: string };
  tags?: string[];
  readingTime?: number;
  category?: string;
}

const { frontmatter, url } = Astro.props as {
  frontmatter: BlogPostFrontmatter;
  url: string;
};

const allPosts = Object.values(
  import.meta.glob<any>('../pages/blog/posts/*.md', { eager: true })
);

const relatedPosts = allPosts
  .filter((p) => p.url !== url)
  .filter(
    (p) =>
      p.frontmatter.tags?.some((tag) => frontmatter.tags?.includes(tag)) ||
      p.frontmatter.category === frontmatter.category
  )
  .slice(0, 3);
---

<BaseLayout>
  <article class="container">
    {frontmatter.category && (
      <span class="badge">{frontmatter.category}</span>
    )}

    <h1 class="title">{frontmatter.title}</h1>

    {frontmatter.description && (
      <p class="description">{frontmatter.description}</p>
    )}

    <div class="meta">
      <span class="author">{frontmatter.author}</span>
      <time datetime={frontmatter.pubDate}>
        {new Date(frontmatter.pubDate).toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        })}
      </time>
      {frontmatter.readingTime && (
        <span>{frontmatter.readingTime} min read</span>
      )}
    </div>

    {frontmatter.image?.url && (
      <figure class="featured-wrapper">
        <img
          src={frontmatter.image.url}
          alt={frontmatter.image.alt ?? frontmatter.title}
          class="featured"
          loading="lazy"
        />
      </figure>
    )}

    <div class="content">
      <slot />
    </div>

    {frontmatter.tags?.length > 0 && (
      <div class="tags">
        {frontmatter.tags.map((tag) => (
          <a href={`/tags/${tag}`} class="tag">#{tag}</a>
        ))}
      </div>
    )}
  </article>

  {relatedPosts.length > 0 && (
    <section class="related">
      <h2>Continue Reading</h2>
      <div class="grid">
        {relatedPosts.map((post) => (
          <BlogPost {...post.frontmatter} url={post.url} />
        ))}
      </div>
    </section>
  )}

  <style>
    :root {
      --radius: 8px;
    }

    .container {
      max-width: 760px;
      margin: auto;
      padding: 3rem 1.25rem;
      color: var(--foreground);
      background: var(--background);
    }

    .badge {
      display: inline-block;
      font-size: 0.75rem;
      padding: 0.25rem 0.75rem;
      border-radius: var(--radius);
      background: var(--accent);
      color: var(--accent-foreground);
      opacity: 0.9;
    }

    .title {
      font-size: clamp(2rem, 5vw, 3.2rem);
      font-weight: 700;
      margin: 1rem 0 0.75rem;
      line-height: 1.2;
      letter-spacing: -0.02em;
    }

    .description {
      color: var(--muted-foreground);
      margin-bottom: 1.75rem;
      font-size: 1.15rem;
      line-height: 1.6;
      max-width: 90%;
    }

    .meta {
      font-size: 0.875rem;
      color: var(--muted-foreground);
      display: flex;
      gap: 1.25rem;
      flex-wrap: wrap;
      margin-bottom: 2.25rem;
    }

    .author {
      font-weight: 500;
    }

    .featured-wrapper {
      margin: 2rem 0;
    }

    .featured {
      width: 100%;
      border-radius: var(--radius);
      object-fit: cover;
      transition: transform 0.4s ease, filter 0.4s ease;
    }

    .featured:hover {
      transform: scale(1.02);
      filter: brightness(1.03);
    }

    .content {
      font-size: 1.125rem;
      line-height: 1.85;
    }

    .content :global(h2) {
      font-size: 1.6rem;
      margin-top: 2.5rem;
      margin-bottom: 1rem;
      font-weight: 600;
    }

    .content :global(h3) {
      font-size: 1.3rem;
      margin-top: 2rem;
      margin-bottom: 0.75rem;
      font-weight: 600;
    }

    .content :global(a) {
      color: var(--primary);
      font-weight: 500;
      text-decoration: none;
      border-bottom: 1px dashed var(--primary);
      transition: border-color 0.2s ease, color 0.2s ease;
    }

    .content :global(a:hover) {
      color: var(--foreground);
      border-color: var(--foreground);
    }

    .content :global(blockquote) {
      border-left: 3px solid var(--primary);
      padding-left: 1rem;
      font-style: italic;
      color: var(--muted-foreground);
      margin: 1.5rem 0;
    }

    .tags {
      margin-top: 2.5rem;
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .tag {
      font-size: 0.85rem;
      padding: 0.3rem 0.75rem;
      border: 1px solid var(--border);
      border-radius: var(--radius);
      background: var(--card);
      color: var(--foreground);
      transition: background 0.25s ease, border-color 0.25s ease;
    }

    .tag:hover {
      background: var(--accent);
      border-color: var(--accent);
      color: var(--accent-foreground);
    }

    .related {
      max-width: 960px;
      margin: 4rem auto;
      padding: 0 1.25rem;
    }

    .related h2 {
      text-align: center;
      font-size: 1.75rem;
      margin-bottom: 2rem;
    }

    .grid {
      display: grid;
      gap: 1.5rem;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    }

    * {
      transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
    }
  </style>
</BaseLayout>
