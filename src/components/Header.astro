---
// Components
import Hamburger from './Hamburger.astro';
import Navigation from './Navigation.astro';
import ThemeIcon from './ThemeIcon.astro';
---
<header class="sticky top-0 z-50 backdrop-blur-md border-b">
  <nav class="max-w-6xl mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      
      <!-- Left: Logo/Brand -->
      <div class="flex items-center">
        <a href="/" class="text-xl font-bold transition-colors brand-link">
          Sidharth's Notebook
        </a>
      </div>

      <!-- Center: Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        <a href="/" class="transition-colors font-medium nav-link">
          Home
        </a>
        <a href="/about" class="transition-colors font-medium nav-link">
          About
        </a>
        <a href="/blog" class="transition-colors font-medium nav-link">
          Blog
        </a>
        <a href="/tags" class="transition-colors font-medium nav-link">
          Tags
        </a>
      </div>

      <!-- Right: Theme Toggle + Mobile Menu -->
      <div class="flex items-center gap-3">
        
        <!-- Theme Toggle -->
        <button 
          id="themeToggle" 
          class="p-2 rounded-lg transition-colors theme-button"
          aria-label="Toggle theme"
        >
          <svg width="20" height="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path class="sun" fill-rule="evenodd" d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"/>
            <path class="moon" fill-rule="evenodd" d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"/>
          </svg>
        </button>

        <!-- Mobile Menu Button -->
        <button 
          id="mobileMenuToggle" 
          class="md:hidden p-2 rounded-lg transition-colors theme-button"
          aria-label="Toggle menu"
        >
          <div class="hamburger">
            <span class="line"></span>
            <span class="line"></span>
            <span class="line"></span>
          </div>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobileMenu" class="md:hidden mt-4 pb-4 border-t mobile-menu hidden">
      <div class="pt-4 space-y-3">
        <a href="/" class="block transition-colors font-medium py-2 nav-link">
          Home
        </a>
        <a href="/about" class="block transition-colors font-medium py-2 nav-link">
          About
        </a>
        <a href="/blog" class="block transition-colors font-medium py-2 nav-link">
          Blog
        </a>
        <a href="/tags" class="block transition-colors font-medium py-2 nav-link">
          Tags
        </a>
      </div>
    </div>
  </nav>
</header>

<style>
  /* Header Styles using CSS Custom Properties */
  header {
    background-color: color-mix(in srgb, var(--background) 80%, transparent);
    border-bottom-color: var(--border);
  }

  /* Brand Link */
  .brand-link {
    color: var(--foreground);
    text-decoration: none;
  }

  .brand-link:hover {
    color: var(--muted-foreground);
  }

  /* Navigation Links */
  .nav-link {
    color: var(--muted-foreground);
    text-decoration: none;
  }

  .nav-link:hover {
    color: var(--foreground);
  }

  /* Theme Button */
  .theme-button {
    background: transparent;
    border: none;
    border-radius: var(--radius);
  }

  .theme-button:hover {
    background-color: var(--accent);
  }

  /* Theme Toggle Icon Styles */
  .sun { 
    fill: var(--foreground);
    transition: fill 0.2s ease;
  }
  
  .moon { 
    fill: transparent;
    transition: fill 0.2s ease;
  }

  html.dark .sun { 
    fill: transparent; 
  }
  
  html.dark .moon { 
    fill: var(--foreground); 
  }

  /* Hamburger Menu Styles */
  .hamburger {
    width: 20px;
    height: 16px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    cursor: pointer;
  }

  .line {
    width: 100%;
    height: 2px;
    background-color: var(--muted-foreground);
    border-radius: 1px;
    transition: all 0.3s ease;
  }

  /* Hamburger Animation */
  .hamburger.active .line:nth-child(1) {
    transform: translateY(7px) rotate(45deg);
  }

  .hamburger.active .line:nth-child(2) {
    opacity: 0;
  }

  .hamburger.active .line:nth-child(3) {
    transform: translateY(-7px) rotate(-45deg);
  }

  /* Mobile Menu */
  .mobile-menu {
    border-top-color: var(--border);
    transition: all 0.3s ease;
  }

  #mobileMenu.show {
    display: block;
    animation: slideDown 0.3s ease;
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Backdrop blur support */
  @supports (backdrop-filter: blur(12px)) {
    header {
      backdrop-filter: blur(12px);
      -webkit-backdrop-filter: blur(12px);
    }
  }

  /* Fallback for browsers that don't support color-mix */
  @supports not (color: color-mix(in srgb, red, blue)) {
    header {
      background-color: var(--background);
      opacity: 0.8;
    }
  }
</style>

<script is:inline>
  // Theme Toggle Functionality
  const theme = (() => {
    const localStorageTheme = localStorage?.getItem("theme") ?? '';
    if (['dark', 'light'].includes(localStorageTheme)) {
      return localStorageTheme;
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");
    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  }

  document.getElementById("themeToggle")?.addEventListener("click", handleToggleClick);

  // Mobile Menu Functionality
  const mobileMenuToggle = document.getElementById("mobileMenuToggle");
  const mobileMenu = document.getElementById("mobileMenu");
  const hamburger = mobileMenuToggle?.querySelector('.hamburger');

  mobileMenuToggle?.addEventListener("click", () => {
    const isHidden = mobileMenu?.classList.contains('hidden');
    
    if (isHidden) {
      mobileMenu?.classList.remove('hidden');
      mobileMenu?.classList.add('show');
      hamburger?.classList.add('active');
    } else {
      mobileMenu?.classList.add('hidden');
      mobileMenu?.classList.remove('show');
      hamburger?.classList.remove('active');
    }
  });

  // Close mobile menu when clicking on links
  const mobileLinks = mobileMenu?.querySelectorAll('a');
  mobileLinks?.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
      mobileMenu?.classList.remove('show');
      hamburger?.classList.remove('active');
    });
  });

  // Close mobile menu when clicking outside
  document.addEventListener('click', (e) => {
    const isClickInsideMenu = mobileMenuToggle?.contains(e.target) || mobileMenu?.contains(e.target);
    if (!isClickInsideMenu && !mobileMenu?.classList.contains('hidden')) {
      mobileMenu?.classList.add('hidden');
      mobileMenu?.classList.remove('show');
      hamburger?.classList.remove('active');
    }
  });
</script>