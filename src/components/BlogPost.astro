---
const {
  url,
  title,
  description,
  pubDate,
  image,
  tags = [],
  readingTime
} = Astro.props;
---

<article class="bg-[color:var(--background)] border border-[color:var(--border)] rounded-lg shadow-sm transition hover:shadow-md overflow-hidden">
  <a href={url} class="block">
    {image?.url && (
      <img
        src={image.url}
        alt={image.alt || title}
        class="w-full h-48 object-cover rounded-t-lg"
        loading="lazy"
      />
    )}
  </a>

  <div class="p-5">
    <a href={url}>
      <h2 class="text-xl font-semibold tracking-tight mb-2 text-[color:var(--foreground)] hover:underline">
        {title}
      </h2>
    </a>

    <p class="text-sm text-[color:var(--muted-foreground)] mb-2">
      {new Date(pubDate).toLocaleDateString(undefined, {
        year: 'numeric',
        month: 'short',
        day: 'numeric'
      })}
      {readingTime && <> â€¢ {readingTime} min read</>}
    </p>

    {description && (
      <p class="text-[color:var(--muted-foreground)] text-sm mb-4 line-clamp-3">
        {description}
      </p>
    )}

    <div class="flex flex-wrap gap-2 mb-4">
      {tags.map(tag => (
        <span class="text-xs px-2 py-1 bg-[color:var(--muted)] text-[color:var(--muted-foreground)] rounded">
          {tag}
        </span>
      ))}
    </div>

    <a
      href={url}
      class="inline-flex items-center text-sm font-medium text-[color:var(--foreground)] hover:text-[color:var(--accent)] transition"
    >
      Read more
      <svg class="w-4 h-4 ms-2 rtl:rotate-180" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" d="M17 8l4 4m0 0l-4 4m4-4H3" />
      </svg>
    </a>
  </div>
</article>
